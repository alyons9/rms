/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Receipt.java
 *
 * Created on Nov 13, 2011, 3:12:06 PM
 */
package view;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import model.Cart;
import model.Drink;
import model.Food;
import view.PaymentOption;
/**
 *
 * @author Jamel Jenkins
 */
public class Receipt extends javax.swing.JPanel {
  public static JLabel name = new JLabel("Name on Card:");
public static JLabel street = new JLabel("Street Address:");
public static JLabel city = new JLabel("City:");
public static JLabel stateZip = new JLabel("State and Zip:");
public static JLabel country = new JLabel("Country:");
public static JLabel email = new JLabel("Email:");
public static JLabel card = new JLabel("Card Type:");
public static JLabel Expiration = new JLabel("Expiration Date:");
public static JLabel cardNumber = new JLabel("Card Number:");
public static JLabel purchases = new JLabel("Items Order");
public static JLabel grabName = new JLabel();

    /** Creates new form Receipt */
    public Receipt() {
        RMSGui.confirm2.addActionListener(paymentConfirmListener);
        initComponents();
    }
//method to get the Cardholder Name
    public String getName() {
        String temp;
        temp = PaymentOption.nameField.getText().trim();
        return temp;
    }
    
    //method to get the Card Type
     public String getCardType() {
        String temp;
        temp = PaymentOption.cardType.getSelectedItem().toString();
        return temp;
    }
     
    //method to get the Card Number
     public String getCardNumber() {
        String temp;
        temp = PaymentOption.cardNumber.getText().trim();
        return temp;
    }
     
    //method to get the Expiration Month
     public String getExpMonth() {
        String temp;
        temp = PaymentOption.expMonth.getSelectedItem().toString();
        return temp;
    }
     
     //method to get the Expiration Year
     public String getExpYear() {
        String temp;
        temp = PaymentOption.expYear.getSelectedItem().toString();
        return temp;
    }
     
     //method to get the Street Address
     public String getStreet() {
        String temp;
        temp = PaymentOption.street.getText().trim();
        return temp;
    }
     
    //method to get the City
     public String getCity() {
        String temp;
        temp = PaymentOption.city.getText().trim();
        return temp;
    }
     
    //method to get the State
     public String getState() {
        String temp;
        temp = PaymentOption.stateslist.getSelectedItem().toString();
        return temp;
    }
    
     //method to get the Zip Code
     public String getZip() {
        String temp;
        temp = PaymentOption.zipField.getText().trim();
        return temp;
    }
     
    //method to get the Country 
     public String getCountry() {
        String temp;
        temp = PaymentOption.countrieslist.getSelectedItem().toString();
        return temp;
    }
    
    //method to get the Email Address
     public String getEmail() {
        String temp;
        temp = PaymentOption.email.getText().trim();
        return temp;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 556, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 724, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
         ActionListener paymentConfirmListener = new ActionListener(){
        public void actionPerformed(ActionEvent e){
      int paymentPane = JOptionPane.showConfirmDialog(
                      RMSGui.confirmframe, "Are You Sure That Your Card Information Is Correct?",
                      "Debit/Credit Card Confirmation",
                      JOptionPane.YES_NO_OPTION);
        if (paymentPane == JOptionPane.YES_OPTION) {
            setVisible(true);
            PaymentOption.debit.setVisible(false);
            PaymentOption.receiptSlip.setVisible(true);
            PaymentOption.receiptSlip.setLocation(20,25);
            PaymentOption.receiptSlip.setSize(200,100);
            PaymentOption.receiptSlip.setForeground(new java.awt.Color(0, 0, 0));
            PaymentOption.receiptSlip.setFont(new java.awt.Font("AR DARLING", 0, 18));
            add(PaymentOption.receiptSlip);
            PaymentOption.cardPics.setVisible(false);
            PaymentOption.name.setVisible(false);
            PaymentOption.nameField.setVisible(false);
            PaymentOption.cardType.setVisible(false);
            PaymentOption.card.setVisible(false);
            PaymentOption.cardNumber.setVisible(false);
            PaymentOption.numberField.setVisible(false);
            PaymentOption.Expiration.setVisible(true);
            PaymentOption.expMonth.setVisible(false);
            PaymentOption.expYear.setVisible(false);
            PaymentOption.cardSecure.setVisible(false);
            PaymentOption.securityField.setVisible(false);
            PaymentOption.billing.setVisible(false);
            PaymentOption.street.setVisible(false);
            PaymentOption.city.setVisible(false);
            PaymentOption.stateZip.setVisible(false);
            PaymentOption.country.setVisible(false);
            PaymentOption.email.setVisible(false);
            //PaymentOption.emailConfirm.setVisible(false);
            PaymentOption.streetField.setVisible(false);
            PaymentOption.cityField.setVisible(false);
            PaymentOption.stateslist.setVisible(false);
            PaymentOption.zipField.setVisible(false);
            PaymentOption.countrieslist.setVisible(false);
            PaymentOption.emailField.setVisible(false);
            //PaymentOption.emailConfirmField.setVisible(false);
            PaymentOption.Debit.setVisible(false);
            PaymentOption.Cash.setVisible(false);
            RMSGui.paymentScrollPane.setVisible(false);
            RMSGui.PaymentLogo.setVisible(false);
            RMSGui.confirm2.setVisible(false);
            RMSGui.confirmback.setVisible(false);
            RMSGui.receiptScrollPane.setVisible(true);
            RMSGui.receiptScrollPane.setSize(522,625);
            RMSGui.receiptScrollPane.setLocation(173,78);
            RMSGui.ReceiptLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Receipt Logo.png")));
           RMSGui.Tablet.add(RMSGui.ReceiptLogo);
           RMSGui.ReceiptLogo.setLocation(350,10);
           RMSGui.ReceiptLogo.setVisible(true);
           RMSGui.ReceiptLogo.setSize(320,88);
            RMSGui.Tablet.add(RMSGui.receiptScrollPane);
            name.setVisible(true);
            name.setLocation(60,55);
            name.setSize(200,100);
            name.setForeground(new java.awt.Color(0, 0, 0));
            name.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(name);
            grabName.setVisible(true);
            grabName.setLocation(110,55);
            grabName.setSize(200,100);
            grabName.setForeground(new java.awt.Color(0, 0, 0));
            grabName.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(grabName);
            card.setVisible(true);
            card.setLocation(60,75);
            card.setSize(200,100);
            card.setForeground(new java.awt.Color(0, 0, 0));
            card.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(card);
            cardNumber.setVisible(true);
            cardNumber.setLocation(60,95);
            cardNumber.setSize(200,100);
            cardNumber.setForeground(new java.awt.Color(0, 0, 0));
            cardNumber.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(cardNumber);
            Expiration.setVisible(true);
            Expiration.setLocation(60,115);
            Expiration.setSize(200,100);
            Expiration.setForeground(new java.awt.Color(0, 0, 0));
            Expiration.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(Expiration);
            street.setVisible(true);
            street.setLocation(60,135);
            street.setSize(200,100);
            street.setForeground(new java.awt.Color(0, 0, 0));
            street.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(street);
            city.setVisible(true);
            city.setLocation(60,155);
            city.setSize(200,100);
            city.setForeground(new java.awt.Color(0, 0, 0));
            city.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(city);
            stateZip.setVisible(true);
            stateZip.setLocation(60,175);
            stateZip.setSize(200,100);
            stateZip.setForeground(new java.awt.Color(0, 0, 0));
            stateZip.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(stateZip);
            country.setVisible(true);
            country.setLocation(60,195);
            country.setSize(200,100);
            country.setForeground(new java.awt.Color(0, 0, 0));
            country.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(country);
            email.setVisible(true);
            email.setLocation(60,215);
            email.setSize(200,100);
            email.setForeground(new java.awt.Color(0, 0, 0));
            email.setFont(new java.awt.Font("AR DARLING", 0, 14));
            add(email);
            purchases.setVisible(true);
            purchases.setLocation(20,255);
            purchases.setSize(200,100);
            purchases.setForeground(new java.awt.Color(0, 0, 0));
            purchases.setFont(new java.awt.Font("AR DARLING", 0, 18));
            add(purchases);
            repaint();
        }
         }};
}
